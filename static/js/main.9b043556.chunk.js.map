{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["colors","getRandomColor","Math","floor","random","length","App","props","handleClick","color","fetch","then","content","json","quote","setState","author","border","background","backgroundCor","backgroundColor","catch","error","console","log","state","class","style","this","className","id","href","encodeURIComponent","target","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAIMA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGIC,EAAiB,SAACD,GAEtB,OAAOA,EADKE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAOK,UA6HjCC,E,kDAtHb,WAAYC,GAAO,IAAD,uBAChB,cAAMA,IA6BRC,YAAc,WACZ,IAAMC,EAAQR,EAAeD,GAC7BU,MAAM,kCAAkCC,MAAK,SAAAC,GAC3CA,EAAQC,OAAOF,MAAK,SAAAG,GAClB,EAAKC,SAAS,CACZD,MAAOA,EAAMF,QACbI,OAAQF,EAAME,OACdP,MAAM,CACJQ,OAAO,eAAD,OAAiBR,GACvBA,MAAOA,GAETS,WAAW,CAETT,MAAOA,GAETU,cAAc,CACZC,gBAAiBX,WAItBY,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,uBAhD9B,IAAMf,EAAQR,EAAeD,GAFb,OAGhB,EAAKyB,MAAQ,CACXX,MAAO,GACPE,OAAQ,GACRP,MAAM,CACJQ,OAAO,eAAD,OAAiBR,GACvBA,MAAOA,GAETS,WAAW,CACTT,MAAOA,GAETU,cAAc,CACVC,gBAAiBX,IAdP,E,qDAmBlB,WAAqB,IAAD,OAClBC,MAAM,kCAAkCC,MAAK,SAAAC,GAC3CA,EAAQC,OAAOF,MAAK,SAAAG,GAClB,EAAKC,SAAS,CACZD,MAAOA,EAAMF,QACbI,OAAQF,EAAME,eAGjBK,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,wB,oBA2BhC,WACE,OACE,qBAAKE,MAAM,UAAUC,MAAOC,KAAKH,MAAMN,cAAvC,SAEE,sBAAKU,UAAU,YAAYC,GAAG,YAA9B,UAEE,sBAAKD,UAAU,WAAWC,GAAG,aAA7B,UAEI,mBAAGJ,MAAM,mBAAmBI,GAAG,MAAMH,MAAOC,KAAKH,MAAMP,aACvD,oBAAIY,GAAG,OAAOH,MAAOC,KAAKH,MAAMP,WAAhC,SACKU,KAAKH,MAAMX,QAGhB,qBAAIgB,GAAG,SAASH,MAAOC,KAAKH,MAAMP,WAAlC,eACKU,KAAKH,MAAMT,aAMpB,sBAAKa,UAAU,UAAf,UAEE,uBAAMA,UAAU,YAAhB,UACE,mBAAGC,GAAG,cAAcC,KAAM,8EAClCC,mBAAmB,IAAMJ,KAAKH,MAAMX,MAAQ,KAAOc,KAAKH,MAAMT,QAASiB,OAAO,SADtE,SAEE,wBAAQP,MAAM,QAAQC,MAAOC,KAAKH,MAAMhB,MAAxC,SACE,mBAAGiB,MAAM,sBAOb,mBAAGI,GAAG,eAAeC,KAAM,6FACnCC,mBAAmBJ,KAAKH,MAAMX,OAC9B,YACAkB,mBAAmBJ,KAAKH,MAAMT,QAC9B,uFAAwFiB,OAAO,SAJvF,SAKE,wBAAQP,MAAM,QAAQC,MAAOC,KAAKH,MAAMhB,MAAxC,SACE,mBAAGiB,MAAM,wBAMf,sBAAMG,UAAU,WAAhB,SACE,wBAAQC,GAAG,YAAYJ,MAAM,MAAMC,MAAOC,KAAKH,MAAMhB,MAAOyB,QAASN,KAAKpB,YAA1E,oC,GArGI2B,IAAMC,WCdTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9b043556.chunk.js","sourcesContent":["\nimport './App.css';\nimport React from 'react';\n\nconst colors = [\n  '#16a085',\n  '#27ae60',\n  '#2c3e50',\n  '#f39c12',\n  '#e74c3c',\n  '#9b59b6',\n  '#FB6964',\n  '#342224',\n  '#472E32',\n  '#BDBB99',\n  '#77B1A9',\n  '#73A857'\n];\n\nconst getRandomColor = (colors) => {\n  const ind = Math.floor(Math.random() * colors.length);\n  return colors[ind];\n}\n\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    const color = getRandomColor(colors);\n    this.state = {\n      quote: '',\n      author: '',\n      color:{\n        border: `1.5px solid ${color}`,\n        color: color\n      },\n      background:{\n        color: color\n      },\n      backgroundCor:{\n          backgroundColor: color\n      }\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://api.quotable.io/random').then(content => {\n      content.json().then(quote => {\n        this.setState({\n          quote: quote.content,\n          author: quote.author\n        })\n      })\n    }).catch(error => console.log('Could not fetch'))\n  }\n\n  handleClick = () =>{\n    const color = getRandomColor(colors);\n    fetch('https://api.quotable.io/random').then(content => {\n      content.json().then(quote => {\n        this.setState({\n          quote: quote.content,\n          author: quote.author,\n          color:{\n            border: `1.5px solid ${color}`,\n            color: color\n          },\n          background:{\n            // \n            color: color\n          },\n          backgroundCor:{\n            backgroundColor: color\n          }\n        })\n      })\n    }).catch(error => console.log('Could not fetch'))\n\n  }\n\n  render(){\n    return (\n      <div class=\"wrapper\" style={this.state.backgroundCor}>\n\n        <div className=\"container\" id=\"quote-box\">\n\n          <div className=\"row-text\" id=\"quote-text\">\n            \n              <i class=\"fa fa-quote-left\" id=\"dec\" style={this.state.background}></i>\n              <h1 id=\"text\" style={this.state.background}>\n                  {this.state.quote}\n              </h1>\n\n              <h3 id=\"author\" style={this.state.background}>\n                - {this.state.author}\n              </h3>\n              \n\n          </div>\n\n          <div className=\"row-btn\">\n\n            <span className=\"first-btn\">\n              <a id=\"tweet-quote\" href={\"https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\" +\n      encodeURIComponent('\"' + this.state.quote + '\" ' + this.state.author)} target=\"_blank\">\n                <button class=\"btn-s\" style={this.state.color}>\n                  <i class=\"fa fa-twitter\">\n\n                 \n                  </i>\n                </button>\n              </a>\n\n              <a id=\"tumblr-quote\" href={\"https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&caption=\"+\n      encodeURIComponent(this.state.quote) +\n      '&content=' +\n      encodeURIComponent(this.state.author) +\n      '&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button'} target=\"_blank\">\n                <button class=\"btn-s\" style={this.state.color}>\n                  <i class=\"fa fa-tumblr\"></i>\n                </button>\n              </a>\n\n            </span>\n\n            <span className=\"last-btn\">\n              <button id=\"new-quote\" class=\"btn\" style={this.state.color} onClick={this.handleClick}>\n                Generate\n              </button>\n            </span>\n\n\n          </div>\n        \n          \n\n\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}